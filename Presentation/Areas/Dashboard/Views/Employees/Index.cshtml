@model IEnumerable<Employee>

@{
    ViewData["Title"] = "Çalışanlar";
    Layout = "~/Areas/Dashboard/Views/Shared/_DashboardLayout2.cshtml";
}
<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="card" id="employeeList">
    <div class="card-datatable table-responsive pt-0">
        <table id="dtEmployees" class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(model => model.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeeFirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeeLastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeePhoneNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeeAddres)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PostalCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.HourlyWage)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MasterId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreatedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EntryDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdatedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SelectedStatus)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdatedComputerName)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        </table>
    </div>
</div>

<!--/ DataTable with Buttons -->
@section Employee {
    <script type="text/javascript">
        $(document).ready(function () {
           $("#dtEmployees").DataTable({
                responsive: true,
                autoWidth: false,
                destroy: true,
                ajax: {
                    url: "/dashboard/Employees/AllEmployees",
                    type: "GET",
                    datatype: "json",
                    contentType: "application/json; charset=utf-8",
                    dataSrc : function (object){
                        console.dir(object.data);
                        return object.data;
                    }
                },
                columns: [
                    { 'data':'id'},
                    {'data':'id'},
                    { 'data': 'employeeFirstName'},
                    { 'data': 'employeeLastName'},
                    { 'data': 'employeePhoneNumber' },
                    {'data':'email'},
                    {'data': 'employeeAddres'},
                    { 'data': 'city' },
                    { 'data': 'country' },
                    { 'data': 'postalCode' },
                    { 'data': 'hourlyWage' },
                    { 'data': 'status' },
                    { 'data': 'masterId' },
                    { 'data': 'createdDate' },
                    { 'data': 'entryDate' },
                    { 'data': 'updatedDate' },
                    { 'data': 'selectedStatus' },
                    { 'data': 'updatedComputerName' }

                ],
        columnDefs: [{
                       target:0,
                    title: 'İşlemler',
                    orderable: false,
                       render: function (data, type, row) {
                   var columnResult = `
                       <div class="row row-bordered g-0" style="float:left;width:100px;">
                <div class="col-12">
                    <div class="demo-inline-spacing">
                           <a class="btn btn-icon btn-label-primary waves-effect" title="Güncelle" href="/Dashboard/Employees/Edit/${data}">
                            <span class="tf-icons ri-edit-2-line ri-22px"></span>
                           </a>
                           <a class="btn btn-icon btn-label-danger waves-effect" title="Sil" onclick="deleteEmployee(${data})">
                           <span class="tf-icons ri-delete-bin-6-line ri-22px btn-text-danger"></span>
                           </a>
                        </div>
                    </div>
                    </div>
                   `;
                       return columnResult;
                   },
                   }],
            });
            /*GetRooms();*/
        });

        function deleteEmployee(id)
        {
                         Swal.fire({ title: "Personel Silme",
                text: "Personel Silinsin mi?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: 'Evet',
                denyButtonText: 'İptal',
                customClass: { confirmButton: "btn btn-primary waves-effect waves-light" ,cancelButton: "btn btn-warning waves-effect waves-light"}}).then((result) => {
                  if (result.isConfirmed) {
                      $.ajax({
                        url: "/Dashboard/Employess/Delete",
                        method: "post",
                        data: {
                               'id': id
                           },
                        success: function (result) {
                             ScreenMessage("success", "İşlem Başarılı", "Personel Kaydiniz Silinmiştir.");
                             location.reload();
                        },
                        error: function (err) {
                            ScreenMessage("error", "Hata Oluştu", err);
                        }
                    })
                  } else if (result.isDenied) {
                    ScreenMessage("success", "İptal Edildi", "Personel silme işleminiz iptal edildi.");
                  }
                })
        }

        function GetRooms() {
            $.ajax({
                url: '/Dashboard/Employess/AllEmployees',
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                       console.dir(result.data);
                },
                error: function (err) {
                    console.dir(err.Message);
                }
            });
        }
    </script>
    }
@*         </table>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeFirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeePhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeAddres)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HourlyWage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MasterId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SelectedStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedComputerName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@