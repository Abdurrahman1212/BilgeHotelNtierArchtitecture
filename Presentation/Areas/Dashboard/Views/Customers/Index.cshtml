@model IEnumerable<Models.Entities.Customer>

@{
    ViewData["Title"] = "Müşteriler";
    Layout = "~/Areas/Dashboard/Views/Shared/_DashboardLayout2.cshtml";
}
<!--/ DataTable with Buttons -->

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="card" id="customerList">
    <div class="card-datatable table-responsive pt-0">
        <table id="dtCustomers" class="table table-bordered table-hover table-checkable">
            <thead>
                <tr>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.County)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PostalCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CustomerPhone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CustomerAddress)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CustomerIdentityNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CustomerPaymentDetails)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MasterId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreatedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EntryDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdatedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SelectedStatus)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdatedComputerName)
                    </th>
                </tr>
            </thead>
            <tbody>
        </table>
        <!--/ DataTable with Buttons -->

    </div>
</div>
<!-- Modal to add new record -->
@section J {
    <script type="text/javascript">
        $(document).ready(function () {
           $("#dtCustomers").DataTable({
                responsive: true,
                autoWidth: false,
                destroy: true,
                ajax: {
                    url: "/Dashboard/Customers/AllCustomers",
                    type: "GET",
                    datatype: "json",
                    contentType: "application/json; charset=utf-8",
                    dataSrc : function (object){
                        console.dir(object.data);
                        return object.data;
                    }
                },
                columns: [
                    { 'data':'id'},
                    { 'data': 'firstName' },
                    { 'data': 'lastName' },
                    { 'data': 'email' },
                    { 'data': 'city' },
                    { 'data': 'county' },
                    { 'data': 'postalCode' },
                    { 'data': 'customerPhone' },
                    { 'data': 'customerAddress' },
                    { 'data': 'customerIdentityNumber' },
                    { 'data': 'customerPaymentDetails' },
                    { 'data': 'masterId' },
                    { 'data': 'createdDate' },
                    { 'data': 'entryDate' },
                    { 'data': 'updatedDate' },
                    { 'data': 'selectedStatus' },
                    { 'data': 'updatedComputerName' }



                ],
                    columnDefs: [{ 
                    target:0,
                    title: 'İşlemler',
                    orderable: false,
                    render: function (data, type, row) {
                var columnResult = `
                <div class="row row-bordered g-0" style="float:left;width:100px;">
                <div class="col-12">
                    <div class="demo-inline-spacing">
                        <a class="btn btn-icon btn-label-primary waves-effect" title="Güncelle" href="/Dashboard/Customers/Edit/${data}">
                        <span class="tf-icons ri-edit-2-line ri-22px"></span>
                        </a>
                        <a class="btn btn-icon btn-label-danger waves-effect" title="Sil" onclick="deleteCustomer(${data})">
                        <span class="tf-icons ri-delete-bin-6-line ri-22px btn-text-danger"></span>
                        </a>
                    </div> 
                    </div>
                    </div>
                `;
                    return columnResult;
                },
                }],
            });
            /*GetRooms();*/
        });

        function deleteCustomer(id)
        {
             Swal.fire({ title: "Müşteri Silme",
                text: "Müşteri Silinsin mi?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: 'Evet',
                denyButtonText: 'İptal',
                customClass: { confirmButton: "btn btn-primary waves-effect waves-light" ,cancelButton: "btn btn-warning waves-effect waves-light"}}).then((result) => {
                  if (result.isConfirmed) {
                      $.ajax({
                        url: "/Dashboard/Customers/Delete",
                        method: "post",
                        data: {
                               'id': id
                           },
                        success: function (result) {
                             ScreenMessage("success", "İşlem Başarılı", "Müşteri Kaydiniz Silinmiştir.");
                             location.reload();
                        },
                        error: function (err) {
                            ScreenMessage("error", "Hata Oluştu", err);
                        }
                    })
                  } else if (result.isDenied) {
                    ScreenMessage("success", "İptal Edildi", "Müşteri silme işleminiz iptal edildi.");
                  }
                })
        }

        function GetRooms() {
            $.ajax({
                url: '/Dashboard/Customers/AllCustomers',
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                       console.dir(result.data);
                },
                error: function (err) {
                    console.dir(err.Message);
                }
            });
        }
    </script>
}